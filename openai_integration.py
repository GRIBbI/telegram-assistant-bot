import logging

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def get_gpt_response(user_text: str) -> str:
    """
    ‚ö†Ô∏è OpenAI API –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á—ë–Ω.
    –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AI-–æ—Ç–≤–µ—Ç—ã, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∫–æ–¥ –∏ –¥–æ–±–∞–≤—å API-–∫–ª—é—á.
    """
    # import openai
    # import os
    # openai.api_key = os.getenv("OPENAI_API_KEY")

    # try:
    #     response = openai.ChatCompletion.create(
    #         model="gpt-3.5-turbo",
    #         messages=[{"role": "user", "content": user_text}],
    #         max_tokens=200
    #     )
    #     return response["choices"][0]["message"]["content"].strip()
    # except Exception as e:
    #     logger.error(f"–û—à–∏–±–∫–∞ OpenAI: {e}")
    #     return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å GPT. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    return "ü§ñ AI-—á–∞—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á—ë–Ω. –í–∫–ª—é—á–∏—Ç–µ OpenAI API, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AI-–æ—Ç–≤–µ—Ç—ã."
